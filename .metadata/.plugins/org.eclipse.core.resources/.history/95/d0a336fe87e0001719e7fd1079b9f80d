package com.intuit.test.StockTrading;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.PriorityBlockingQueue;

import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.GenericEntity;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import com.intuit.test.Exceptions.StockNotFoundException;
import com.intuit.test.StockTrading.Database.AnalyzerDB;
import com.intuit.test.StockTrading.ModelClasses.Stock;
import com.intuit.test.StockTrading.ModelClasses.UserQuery;


@Path("/query")
public class SubmitQuery {
	
	

	QueryService queryService = new QueryService();
	@GET
	@Produces(MediaType.APPLICATION_JSON)
	public Response getStocksList()
	{
		
		return Response.status(200)
				.entity(AnalyzerDB.getInstance().getStocks().get(0))
				.build();
		
	}
	

	@POST
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public Response postOrder(UserQuery query){
		queryService.processQuery(query);
		return null;
		
	
	}
	
	
	

}
